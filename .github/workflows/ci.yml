name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.md"
      - scripts/**
      - blog/**
      - docs/**
      - .github/**
      - "!.github/workflows/ci.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Run lint
        run: pnpm eslint . --ext .js,.jsx,.ts,.tsx --fix

  types:
    name: Check Types
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: check types
        run: "pnpm tsc --noEmit"

  unit-test:
    name: Unit Test
    timeout-minutes: 3
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft != true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Run Test
        run: CI=true pnpm jest --coverage

  install-build:
    name: Build and upload artifacts
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft != true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Build packages
        run: pnpm build

      - name: Build DnD React App
        run: pnpm -F dflex-react-dnd build:app

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            packages/**/dist
            packages/**/types
          if-no-files-found: error

  e2e-same-container-vertical:
    name: One Container Vertically - Chrome
    runs-on: ubuntu-latest
    needs: install-build
    timeout-minutes: 8
    if: github.event.pull_request.draft != true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./packages

      - name: Testing features for DnD with React APP - Chrome
        run: pnpm -F @dflex/dnd test:vertical:chrome

  # e2e-same-container-horizontal:
  #   name: One Container Horizontally - Chrome
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 8
  #   if: github.event.pull_request.draft != true
  #   needs: install-build
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v3

  #     - name: Cache pnpm modules
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.pnpm-store
  #         key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-

  #     - uses: pnpm/action-setup@v2.2.1
  #       with:
  #         version: 7.0.0
  #         run_install: true

  #     - name: Use latest version of Node.j
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "*"
  #         cache: "pnpm"

  #     - name: Download Build Artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build
  #         path: ./packages

  #     - name: Testing features for DnD with React APP - Chrome
  #       uses: cypress-io/github-action@v2
  #       with:
  #         working-directory: packages/dnd
  #         install: false
  #         start: pnpm -F dflex-react-dnd preview
  #         wait-on-timeout: 30
  #         spec: cypress/integration/same-container-horizontal/**/*.spec.ts
  #         wait-on: "http://localhost:3001/"
  #         browser: chrome
  #         headless: false
  #       env:
  #         #CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         #CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  e2e-multi-containers:
    name: Multiple Containers - Chrome
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: github.event.pull_request.draft != true
    needs: install-build
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./packages

      - name: Testing features for DnD with React APP - Chrome
        run: pnpm -F @dflex/dnd test:multi:chrome

  release:
    name: Publish to NPM
    if: ${{ github.ref_name == 'main' && github.repository_owner == 'dflex-js' }}
    runs-on: ubuntu-latest
    needs: [
        lint,
        unit-test,
        types,
        install-build,
        e2e-same-container-vertical,
        # e2e-same-container-horizontal,
        e2e-multi-containers,
      ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.0.0
          run_install: true

      - name: Use latest version of Node.j
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "pnpm"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./packages

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm -r publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
